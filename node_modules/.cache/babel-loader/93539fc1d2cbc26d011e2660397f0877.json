{"ast":null,"code":"var _jsxFileName = \"/Users/chelsealong/uofu/Clicky-Game/src/components/ImageGrid.js\";\nimport { Container, Row, Col, Image } from \"react-bootstrap\";\n\nfunction ImageGrid(props) {\n  var _this = this;\n\n  createTable = function createTable(images) {\n    var containerChildren = [];\n    var rowChildren = [];\n\n    _this.shuffleImages(images);\n\n    for (var i = 0; i < images.length; i++) {\n      rowChildren.push(React.createElement(Col, {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, React.createElement(Image, {\n        onClick: _this.handleClick,\n        width: \"200px\",\n        src: images[i],\n        thumbnail: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      })));\n\n      if (i % 4 === 3 || images.length - 1 === i) {\n        containerChildren.push(React.createElement(Row, {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, rowChildren));\n        rowChildren = [];\n      }\n    }\n\n    return containerChildren;\n  };\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"createTable(props.images)\");\n}\n\nexport default ImageGrid;","map":{"version":3,"sources":["/Users/chelsealong/uofu/Clicky-Game/src/components/ImageGrid.js"],"names":["Container","Row","Col","Image","ImageGrid","props","createTable","images","containerChildren","rowChildren","shuffleImages","i","length","push","handleClick"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,KAA9B,QAA2C,iBAA3C;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACxBC,EAAAA,WAAW,GAAG,qBAACC,MAAD,EAAY;AACxB,QAAIC,iBAAiB,GAAG,EAAxB;AACA,QAAIC,WAAW,GAAG,EAAlB;;AACA,IAAA,KAAI,CAACC,aAAL,CAAmBH,MAAnB;;AACA,SAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,MAAM,CAACK,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtCF,MAAAA,WAAW,CAACI,IAAZ,CACE,oBAAC,GAAD;AAAK,QAAA,GAAG,EAAEF,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACE,QAAA,OAAO,EAAE,KAAI,CAACG,WADhB;AAEE,QAAA,KAAK,EAAC,OAFR;AAGE,QAAA,GAAG,EAAEP,MAAM,CAACI,CAAD,CAHb;AAIE,QAAA,SAAS,MAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;;AAUA,UAAIA,CAAC,GAAG,CAAJ,KAAU,CAAV,IAAeJ,MAAM,CAACK,MAAP,GAAgB,CAAhB,KAAsBD,CAAzC,EAA4C;AAC1CH,QAAAA,iBAAiB,CAACK,IAAlB,CAAuB,oBAAC,GAAD;AAAK,UAAA,GAAG,EAAEF,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAcF,WAAd,CAAvB;AACAA,QAAAA,WAAW,GAAG,EAAd;AACD;AACF;;AACD,WAAOD,iBAAP;AACD,GArBD;;AAuBA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF;AAGD;;AAED,eAAeJ,SAAf","sourcesContent":["import { Container, Row, Col, Image } from \"react-bootstrap\";\n\nfunction ImageGrid(props) {\n  createTable = (images) => {\n    let containerChildren = [];\n    let rowChildren = [];\n    this.shuffleImages(images);\n    for (let i = 0; i < images.length; i++) {\n      rowChildren.push(\n        <Col key={i}>\n          <Image\n            onClick={this.handleClick}\n            width=\"200px\"\n            src={images[i]}\n            thumbnail\n          />\n        </Col>\n      );\n      if (i % 4 === 3 || images.length - 1 === i) {\n        containerChildren.push(<Row key={i}>{rowChildren}</Row>);\n        rowChildren = [];\n      }\n    }\n    return containerChildren;\n  };\n\n  return (\n    <Container>createTable(props.images)</Container>\n  );\n}\n\nexport default ImageGrid;\n"]},"metadata":{},"sourceType":"module"}